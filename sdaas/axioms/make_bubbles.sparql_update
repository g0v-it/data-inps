#
# Create a bubble (without previousValue)
#
PREFIX fr: <http://linkeddata.center/botk-fr/v1#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#> 
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX prov: <http://www.w3.org/ns/prov#> 
PREFIX interval: <http://reference.data.gov.uk/def/intervals/>
PREFIX time: <http://www.w3.org/2006/time#>
PREFIX qb: <http://purl.org/linked-data/cube#>
PREFIX bgo: <http://linkeddata.center/lodmap-bgo/v1#>

INSERT { 
   ?bubbleUri a bgo:Account ;
		bgo:inBubbleGraph ?bgo;
		bgo:code ?code ;
		dct:title ?title ;
		dct:description ?description ;
		dct:subject ?subject ;
		dct:source ?fact ;
		bgo:amount ?amount ;
		bgo:version ?year;
		bgo:partitionLabel ?partitionLabel1, ?partitionLabel2
} WHERE {

  
  {
  	?bgo a bgo:BubbleGraph.
    
  	{ ?bgo dct:source ?fr . ?fr a fr:FinancialReport }
  	UNION
  	{ ?bgo dct:source/dct:source ?fr. ?fr a fr:FinancialReport } 
  }
  	

  ?fact a fr:Fact ;
  		  qb:dataSet ?fr ;
          fr:concept ?fact_concept ;
          fr:refPeriod/time:hasBeginning/interval:ordinalYear ?year ;
          fr:amount ?amount 
  .
  
  ?fact_concept 
  	skos:broader ?categoria ; 
  	skos:notation ?notation; 
  	skos:prefLabel ?title 
  .
  ?categoria skos:broader ?capitolo; skos:prefLabel ?descrizioneCategoria .
  
  ?capitolo skos:broader ?upb .
  
  ?upb skos:prefLabel ?partitionLabel1.
  
  BIND( IF( CONTAINS(?notation, "E"),"ENTRATE","USCITE") AS ?partitionLabel2)
  BIND( MD5(str(?fact)) AS ?code)	
  BIND( IRI( CONCAT("https://data.inps.g0v.it/ldp/account/",?code,"#data")) AS ?bubbleUri)
  BIND( CONCAT(?partitionLabel1," (",  ?partitionLabel2,")") AS ?subject)
  BIND( CONCAT(
  			"Sezione ", ?partitionLabel2, ". Capitolo di spesa ", ?notation,
   	 		" appartenete alla categoria <em>", ?descrizioneCategoria, 
   	 		"</em>. Parte della UPB <em>", ?partitionLabel1, "</em>."
   	 	) AS ?description )
    
}

;

#
# Create history rec
#

INSERT {
  ?account bgo:isVersionOf ?historyRec.
  ?historyRec a bgo:VersionedAmount; bgo:version ?year; bgo:amount ?amount.
} WHERE {
	?account a bgo:Account; dct:source ?fact1 .
    ?fact1 fr:concept/skos:notation ?notation .
    ?fact2 fr:concept/skos:notation ?notation .
    FILTER( ?fact1 != ?fact2 )
    ?fact2 fr:amount ?amount; fr:refPeriod/time:hasBeginning/interval:ordinalYear ?year .
  	BIND( IRI( CONCAT( STR(?fact2),"_bh")) AS ?historyRec )
}

;

#
# Create previousValue
#
INSERT { ?account bgo:previousValue ?lastAmount }
WHERE {
  {
		SELECT DISTINCT ?account ( MAX(?year) AS ?last_year )  WHERE {
			?account a bgo:Account; bgo:isVersionOf ?historyRec .
			?historyRec bgo:version ?year
		} GROUP BY ?account

  }
  ?account bgo:isVersionOf ?historyRec.
  ?historyRec bgo:version ?last_year; bgo:amount ?lastAmount
}